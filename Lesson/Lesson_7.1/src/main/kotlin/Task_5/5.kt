package org.example.Task_5

/**
 * Описать регулярное выражение для почтового адреса вида <логин>@<домен>.<домен верхнего уровня>, где:
 * логин состоит из букв английского алфавита (в том числе и в верхнем регистре),
 * цифр и знаков нижнего подчёркивания ( _ )
 *
 * домен состоит из букв английского алфавита в нижнем регистре
 * домен верхнего уровня состоит из букв английского алфавита в нижнем регистре и имеет длину не более 4.
 *
 * С помощью составленного регулярного выражения выведите логины всех корректных email-ов из строки,
 * состоящей как из корректных email'ов,
 * так и из некорректных
 * (к примеру, в строке "qwerty@mail2.ru hi@me.co vaimon@vk.com i@i.i example@gmail.company" нужно вывести: hi, vaimon, i).
 *
 * Замечание. Вполне возможно, что вы захотите проверить email вроде
 * mY:&(mailo@mail.ru, при этом ваша программа может валидировать этот email, как правильный с логином mailo (даже с использованием \b!).
 * Для основных заданий это не считается ошибкой, а решить эту проблему можно попробовать в качестве доп. задания.
 */
fun main() {
    val email = listOf(
        "qwerty@mail2.ru",
        "hi@me.co",
        "vaimon@vk.com",
        "i@i.i",
        "example@gmail.company",
    )
    println(emailAddress(email.toString()))
}

/**
 * Функци описывает регулярное выражение для почтового индекса.
 * логин - ([a-zA-Z-0-9-_]+)
 * собака - @
 * домен - ([a-z]+)
 * точка - .
 * домен верхнего уровня - ([a-z]{1,4})
 *
 * regex.findAll(email).map { it.groupValues[1] } -> возвращает все нахождения и преобразует вывод без квадратных ковычек и через ;
 * -> находит последовательно все совпадения из списка и выводит только первую группу захваенного списка(первые скобки).
 *
 * return result.toList().joinToString("; ") -> возвращает все нахождения и преобразует вывод без квадратных ковычек и через ;
 */
fun emailAddress(email: String): String {
    val regex = Regex("""([a-zA-Z-0-9-_]+)@([a-z]+).([a-z]{1,4})\b""")
    val result = regex.findAll(email).map { it.groupValues[1] }

    return result.toList().joinToString("; ")
}